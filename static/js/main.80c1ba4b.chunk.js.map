{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Buttons","options","onLeaveFeedback","className","styles","feedback__buttons","map","option","feedback__button","type","onClick","Statistics","good","neutral","bad","totalCount","percentage","feedback__statsList","positive","negative","Section","title","children","Notification","message","App","useState","goodFeedback","setGoodFeedback","neutralFeedback","setNeutralFeedback","badFeedback","setBadFeedback","countTotalFeedback","value","prev","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,SAAW,6BAA6B,SAAW,+B,kBCAnID,EAAOC,QAAU,CAAC,kBAAoB,2CAA2C,iBAAmB,4C,iBCApGD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,gKCGb,SAASC,EAAT,GAAgD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACzC,OACE,qBAAKC,UAAWC,IAAOC,kBAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBAEEJ,UAAWC,IAAOI,iBAClBC,KAAK,SACLC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GALIA,Q,oBCLA,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,WACAC,EACC,EADDA,WAEA,OACE,mCACE,qBAAIb,UAAWC,IAAOa,oBAAtB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,oDACqB,IACnB,uBACEZ,UAAWa,GAAc,GAAKZ,IAAOc,SAAWd,IAAOe,SADzD,UAGGH,EAHH,e,oBCLKI,EAXC,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,EAAeC,EAAf,EAAeA,SAAf,OACd,qCACGD,GAAS,oBAAIlB,UAAWC,IAAOiB,MAAtB,SAA8BA,IACvCC,M,gBCKUC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGrB,UAAWC,IAAOoB,QAArB,SAA+BA,KCElB,SAASC,IACtB,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAuBMC,EAAqB,WACzB,OAAON,EAAeE,EAAkBE,GAO1C,OACE,mCACE,qBAAK5B,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEpB,QAnCI,CAAC,OAAQ,UAAW,OAoCxBC,gBAjCY,SAAAgC,GACtB,OAAQA,GACN,IAAK,OACHN,GAAgB,SAAAO,GACd,OAAOA,EAAO,KAEhB,MACF,IAAK,UACHL,GAAmB,SAAAK,GAAI,OAAIA,EAAO,KAClC,MACF,IAAK,MACHH,GAAe,SAAAG,GAAI,OAAIA,EAAO,KAC9B,MACF,QACE,aAuBE,cAAC,EAAD,CAASd,MAAM,aAAf,SACGY,IAAuB,EACtB,cAACtB,EAAD,CACEC,KAAMe,EACNd,QAASgB,EACTf,IAAKiB,EACLhB,WAAYkB,IACZjB,WArBLoB,KAAKC,MAAOV,EAAeM,IAAwB,OAwBhD,cAAC,EAAD,CAAcT,QAAQ,+B,MCxDpCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.80c1ba4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__statsList\":\"Statistics_feedback__statsList__3PeqN\",\"positive\":\"Statistics_positive__2dgd5\",\"negative\":\"Statistics_negative__2WCOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__buttons\":\"FeedbackOptions_feedback__buttons__3ieyw\",\"feedback__button\":\"FeedbackOptions_feedback__button__2C8UU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1esgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__nC0un\"};","import React from 'react';\nimport styles from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Buttons({ options, onLeaveFeedback }) {\n  return (\n    <div className={styles.feedback__buttons}>\n      {options.map(option => (\n        <button\n          key={option}\n          className={styles.feedback__button}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nButtons.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from 'react';\nimport styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  totalCount,\n  percentage,\n}) {\n  return (\n    <>\n      <ul className={styles.feedback__statsList}>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {totalCount}</li>\n        <li>\n          Positive feedback:{' '}\n          <span\n            className={percentage >= 50 ? styles.positive : styles.negative}\n          >\n            {percentage}%\n          </span>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  values: PropTypes.number,\n  totalCount: PropTypes.number,\n  percentage: PropTypes.number,\n};\n","import React from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title = '', children }) => (\n  <>\n    {title && <h2 className={styles.title}>{title}</h2>}\n    {children}\n  </>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport styles from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <p className={styles.message}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import './App.css';\nimport React, { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nexport default function App() {\n  const [goodFeedback, setGoodFeedback] = useState(0);\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\n  const [badFeedback, setBadFeedback] = useState(0);\n\n  const options = ['good', 'neutral', 'bad'];\n  // console.log(options);\n\n  const handleIncrement = value => {\n    switch (value) {\n      case 'good':\n        setGoodFeedback(prev => {\n          return prev + 1;\n        });\n        break;\n      case 'neutral':\n        setNeutralFeedback(prev => prev + 1);\n        break;\n      case 'bad':\n        setBadFeedback(prev => prev + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return goodFeedback + neutralFeedback + badFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((goodFeedback / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"container\">\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              options={options}\n              onLeaveFeedback={handleIncrement}\n            />\n          </Section>\n\n          <Section title=\"Statistics\">\n            {countTotalFeedback() > 0 ? (\n              <Statistics\n                good={goodFeedback}\n                neutral={neutralFeedback}\n                bad={badFeedback}\n                totalCount={countTotalFeedback()}\n                percentage={countPositiveFeedbackPercentage()}\n              />\n            ) : (\n              <Notification message=\"No feedback given\" />\n            )}\n          </Section>\n        </div>\n      </div>\n    </>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   options = Object.keys(this.state);\n\n//   handleIncrement = value => {\n//     this.setState(prevState => ({\n//       [value]: prevState[value] + 1,\n//     }));\n//   };\n\n//   countTotalFeedback = () => {\n//     return this.state.good + this.state.neutral + this.state.bad;\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <div className=\"App\">\n//           <div className=\"container\">\n//             <Section title=\"Please leave feedback\">\n//               <FeedbackOptions\n//                 options={this.options}\n//                 onLeaveFeedback={this.handleIncrement}\n//               />\n//             </Section>\n\n//             <Section title=\"Statistics\">\n//               {this.countTotalFeedback() > 0 ? (\n//                 <Statistics\n//                   values={this.state}\n//                   totalCount={this.countTotalFeedback()}\n//                   percentage={this.countPositiveFeedbackPercentage()}\n//                 />\n//               ) : (\n//                 <Notification message=\"No feedback given\" />\n//               )}\n//             </Section>\n//           </div>\n//           {/* <Feedback defaultProps={(good, neutral, bad)} /> */}\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}